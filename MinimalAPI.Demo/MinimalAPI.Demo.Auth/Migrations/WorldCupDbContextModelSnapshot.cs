// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinimalAPI.Demo.Auth.DataAccess;

#nullable disable

namespace MinimalAPI.Demo.Auth.Migrations
{
    [DbContext(typeof(WorldCupDbContext))]
    partial class WorldCupDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MinimalAPI.Demo.Auth.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Group = "A",
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = 2,
                            Group = "A",
                            Name = "Ecuador"
                        },
                        new
                        {
                            Id = 3,
                            Group = "A",
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = 4,
                            Group = "A",
                            Name = "Senegal"
                        },
                        new
                        {
                            Id = 5,
                            Group = "B",
                            Name = "England"
                        },
                        new
                        {
                            Id = 6,
                            Group = "B",
                            Name = "USA"
                        },
                        new
                        {
                            Id = 7,
                            Group = "B",
                            Name = "Wales"
                        },
                        new
                        {
                            Id = 8,
                            Group = "B",
                            Name = "Iran"
                        });
                });

            modelBuilder.Entity("MinimalAPI.Demo.Auth.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "minimalapi",
                            Role = "Administrator",
                            Username = "martin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "test123",
                            Role = "Standard",
                            Username = "test"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
